name: Build CLI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pyinstaller requests
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      shell: bash
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build CLI module
      run: |
        pyinstaller quest-cli.py
        
    - name: Generate archive from dist
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
            powershell -Command "Compress-Archive -Path dist/quest-cli/ -DestinationPath quest-cli.zip"
        else
            tar -C dist -czvf quest-cli.tar.gz quest-cli/
        fi

    - name: Archive build output
      uses: actions/upload-artifact@v2
      with:
        name: quest-cli-${{ matrix.os }}
        path: ${{ matrix.os == 'windows-latest' && 'quest-cli.zip' || 'quest-cli.tar.gz' }}
